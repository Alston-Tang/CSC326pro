// generated by Fast Light User Interface Designer (fluid) version 1.0011

// $Header $
// Project: My Town
#include "GrTown_PCH.H"
#include "GraphicsTownUI.H"
#include "GrObject.H"
#include "GrWorld.H"
using std::vector;

inline void GraphicsTownUI::cb_pickCamera_i(Fl_Browser*, void*) {
  pickInteresting->deselect();
}
void GraphicsTownUI::cb_pickCamera(Fl_Browser* o, void* v) {
  ((GraphicsTownUI*)(o->parent()->parent()->user_data()))->cb_pickCamera_i(o,v);
}

inline void GraphicsTownUI::cb_time_i(Fl_Value_Slider*, void*) {
  townView->damage(1);
}
void GraphicsTownUI::cb_time(Fl_Value_Slider* o, void* v) {
  ((GraphicsTownUI*)(o->parent()->parent()->user_data()))->cb_time_i(o,v);
}

inline void GraphicsTownUI::cb_fov_i(Fl_Value_Slider*, void*) {
  townView->damage(1);
}
void GraphicsTownUI::cb_fov(Fl_Value_Slider* o, void* v) {
  ((GraphicsTownUI*)(o->parent()->parent()->user_data()))->cb_fov_i(o,v);
}

inline void GraphicsTownUI::cb_pickInteresting_i(Fl_Browser*, void*) {
  pickCamera->deselect();
follower->value(0);
}
void GraphicsTownUI::cb_pickInteresting(Fl_Browser* o, void* v) {
  ((GraphicsTownUI*)(o->parent()->parent()->user_data()))->cb_pickInteresting_i(o,v);
}

inline void GraphicsTownUI::cb_Fly_i(Fl_Button*, void*) {
  follower->value(0);
pickCamera->deselect();
pickInteresting->deselect();
townView->damage(1);
}
void GraphicsTownUI::cb_Fly(Fl_Button* o, void* v) {
  ((GraphicsTownUI*)(o->parent()->parent()->user_data()))->cb_Fly_i(o,v);
}

Fl_Double_Window* GraphicsTownUI::make_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = window = new Fl_Double_Window(931, 616, "Project: My Town!");
    w = o;
    o->labelsize(12);
    o->user_data((void*)(this));
    { TownViewWidget* o = townView = new TownViewWidget(5, 5, 760, 605);
      o->align(FL_ALIGN_BOTTOM);
      Fl_Group::current()->resizable(o);
      o->ui = this;
    }
    { Fl_Group* o = new Fl_Group(770, 5, 155, 600);
      { Fl_Browser* o = pickCamera = new Fl_Browser(770, 5, 155, 165, "view");
        o->type(2);
        o->callback((Fl_Callback*)cb_pickCamera);
        Fl_Group::current()->resizable(o);
        for(vector<GrObject*>::iterator g=theObjects.begin(); g != theObjects.end(); ++g)
        if((*g)->ridable) o->add((*g)->name.c_str(),*g);
      }
      { Fl_Button* o = cull = new Fl_Button(770, 580, 75, 25, "Backface Cull");
        o->type(1);
        o->value(1);
        o->selection_color(11);
        o->labelsize(12);
      }
      { Fl_Value_Slider* o = time = new Fl_Value_Slider(780, 470, 115, 20, "Time of Day (24hr)");
        o->type(5);
        o->maximum(24);
        o->step(1);
        o->value(9);
        o->callback((Fl_Callback*)cb_time);
      }
      { Fl_Value_Slider* o = fov = new Fl_Value_Slider(905, 430, 15, 75, "FoV");
        o->minimum(1);
        o->maximum(180);
        o->step(1);
        o->value(45);
        o->callback((Fl_Callback*)cb_fov);
      }
      { Fl_Button* o = lgTex = new Fl_Button(850, 580, 75, 25, "textured ground");
        o->type(1);
        o->value(1);
        o->selection_color(11);
        o->labelsize(10);
      }
      { Fl_Button* o = follower = new Fl_Button(770, 190, 70, 25, "Follow");
        o->type(1);
        o->color(47);
        o->selection_color(11);
      }
      { Fl_Value_Output* o = rate = new Fl_Value_Output(875, 520, 50, 25, "frame rate");
        o->maximum(100);
        o->step(0.1);
      }
      { Fl_Value_Slider* o = speedup = new Fl_Value_Slider(840, 550, 85, 25, "speedup");
        o->type(1);
        o->maximum(3);
        o->step(0.2);
        o->value(1);
        o->align(FL_ALIGN_LEFT);
      }
      { Fl_Browser* o = pickInteresting = new Fl_Browser(770, 225, 155, 165, "sights");
        o->type(2);
        o->callback((Fl_Callback*)cb_pickInteresting);
        for(vector<GrObject*>::iterator g=theObjects.begin(); g != theObjects.end(); ++g)
        if((*g)->interesting) o->add((*g)->name.c_str(),*g);
      }
      { Fl_Button* o = new Fl_Button(850, 190, 70, 25, "Fly");
        o->callback((Fl_Callback*)cb_Fly);
      }
      o->end();
    }
    o->end();
  }
  return w;
}
